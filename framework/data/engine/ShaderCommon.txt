#if _SHADER_

#if defined(__METAL_VERSION__)
	// ...
#elif LEGACY_GL
	#define shader_attrib attribute
	#define shader_in varying
	#define shader_out varying

	#define texture texture2D
#else
	#define shader_attrib in
	#define shader_in in
	#define shader_out out
#endif

#define tex2D texture

#if !LEGACY_GL
vec2 textureSizef(sampler2D sampler, int lod)
{
	return vec2(textureSize(sampler, lod));
}
#endif

#else

class vec2
{
public:
	vec2() { }
	vec2(float _x, float _y) : x(_x), y(_y) { }
	float x, y;
};

class vec3
{
public:
	vec3() { }
	vec3(float _x, float _y, float _z) : x(_x), y(_y), z(_z) { }
	float x, y, z, _;
};

class vec4
{
public:
	vec4() { }
	vec4(float _x, float _y, float _z, float _w) : x(_x), y(_y), z(_z), w(_w) { }
	float x, y, z, w;
};

class mat4
{
public:
	float v[16];
};

#endif

#if LEGACY_GL
	#define VS_USE_LEGACY_MATRICES 1
#else
	#define VS_USE_LEGACY_MATRICES 0
#endif

#define VS_POSITION      0
#define VS_NORMAL        1
#define VS_COLOR         2
#define VS_TEXCOORD0     3
#define VS_TEXCOORD      VS_TEXCOORD0
#define VS_TEXCOORD1     4
#define VS_BLEND_INDICES 5
#define VS_BLEND_WEIGHTS 6
