include engine/ShaderPS.txt
include engine/builtin-hq-common.txt

shader_in vec2 v_center;
shader_in float v_radius;
shader_in float v_strokeSize;
shader_in vec4 v_color;

float computeDistance(vec2 p)
{
	float d = length(p - v_center) - v_radius;
	
	return d;
}

float distanceFade(float distance)
{
	return clamp(v_strokeSize - abs(distance), 0.0, 1.0);
}

void main()
{
	float v = 0.0;
	
	float d = - computeDistance(v_p);
	
	if (abs(d) > v_strokeSize + 1.0 && enableOptimizations)
	{
		v = 0.0;
	}
	else
	{
		v = sampleDistanceFunction(v_p);
	}

	vec4 color = hqColor(v, v_color);
	
	shader_fragColor = color;
}
