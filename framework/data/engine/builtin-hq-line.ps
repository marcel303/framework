include engine/ShaderPS.txt
include engine/builtin-hq-common.txt

shader_in vec2 v_p1;
shader_in vec2 v_p2;
shader_in float v_strokeSize;
shader_in vec3 v_edgePlane;
shader_in vec3 v_perpPlane;
shader_in vec4 v_color;

float computeDistance(vec2 p)
{
	float de = dot(v_edgePlane, vec3(p, 1.0));
	
	float d1 = de < 0.0
		? length(v_p1 - p)
		: 0.0;
	
	float d2 = de > 1.0
		? length(v_p2 - p)
		: 0.0;
	
	float d3 = abs(dot(v_perpPlane, vec3(p, 1.0)));
	
	float d = max(max(d1, d2), d3);
	
	return d;
}

float distanceFade(float distance)
{
	return clamp(v_strokeSize - distance, 0.0, 1.0);
}

void main()
{
	float v = 0.0;
	
	v = sampleDistanceFunction(v_p);

	vec4 color = hqColor(v, v_color);
	
	shader_fragColor = color;
}
