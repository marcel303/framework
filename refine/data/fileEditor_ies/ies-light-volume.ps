include engine/ShaderPS.txt
include engine/ShaderUtil.txt
include fileEditor_ies/ies-lookup.txt

uniform vec3 lightPosition_world;

shader_in vec3 v_position;
shader_in vec3 v_origin;

shader_in vec4 v_debug;

void main()
{
	vec3 position = v_origin;
	vec3 direction = normalize(v_position - v_origin);

	float sum = 0.0;

	int n = 60;

	float maxDistance = 1.0;
	vec3 step = direction * maxDistance / n;

	for (int i = 0; i < n; ++i)
	{
		vec3 direction = position - lightPosition_world;

		float distanceSquared = dot(direction, direction);
		float attenuation = 1.0 / distanceSquared;

		float value = ies_lookup_1d(direction) * attenuation;

		sum += value;

		position += step;
	}

	sum *= (1.0 / n);

	sum *= 0.1;

	sum = pow(sum, 1.0/2.2);

	vec3 color = vec3(sum);

	shader_fragColor = vec4(color, 1.0);
	//shader_fragColor.rgb = v_debug.xyz;
}
