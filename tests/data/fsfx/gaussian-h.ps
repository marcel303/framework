include fsfx/common.inc

uniform float gaussianKernelSize;
uniform vec4 gaussianKernelWeights[32] buffer gaussianKernel;

float getWeight(int i)
{
	vec4 v = gaussianKernelWeights[i >> 2];

	i = i & 3;

	return v[i];
}

vec4 fsfx()
{
    float texScale = param1 / textureSize(colormap, 0).x / (gaussianKernelSize - 1.0);
	
	vec4 result = texture(colormap, texcoord) * getWeight(0);
	
	for (int i = 1; i < gaussianKernelSize; ++i)
	{
		result += texture(colormap, texcoord + vec2(texScale * i, 0.0)) * getWeight(i);
		result += texture(colormap, texcoord - vec2(texScale * i, 0.0)) * getWeight(i);
	}
	
    return result;
}
