include engine/ShaderPS.txt
include engine/ShaderUtil.txt

shader_in vec3 v_position;
shader_in vec3 v_normal;

void main()
{
	vec3 color = vec3(0.0);

	//

	vec3 light_pos = vec3(1, -2, 1);
	//vec3 light_dir = normalize(vec3(1, 1, 1));
	float light_intensity = 10.0;
	vec3 light_color = srgbToLinear(vec3(0.5, 0.5, 0.5));

	vec3 delta = light_pos - v_position;
	float distanceSq = dot(delta, delta);
	vec3 light_dir = normalize(delta);

	float d = dot(v_normal, light_dir);
	d = max(0.0, d);

	vec3 object_color = (v_normal + vec3(1.0)) / 2.0;
	color += light_color * light_intensity / distanceSq * d * object_color;

	//

	vec3 ambient_color = vec3(0.02, 0.01, 0.01);
	color += ambient_color;

	//

	color = linearToSrgb(color);

	//

	shader_fragColor.rgb = color;
	shader_fragColor.a = 1.0;
}
