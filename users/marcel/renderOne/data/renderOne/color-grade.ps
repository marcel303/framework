include engine/ShaderPS.txt
include renderOne/depth-functions.txt

uniform sampler2D colorTexture;
uniform sampler2D lutTexture;

shader_in vec2 texcoord;

void main()
{
	vec4 color = texture(colorTexture, texcoord);
	color.rgb = clamp(color.rgb, vec3(0.0), vec3(1.0));

#define fuzzle(x) ((x) * (1.0 - 1.0/16.0) + 0.5/16.0)

	float b_exact = color.b * 16.0;
	float b_floor = floor(b_exact);

	float x1 = fuzzle(color.r) / 16.0 + b_floor / 16.0;
	float x2 = x1 + 1.0 / 16.0;
	float y = fuzzle(color.g);

	vec3 lutColor1 = texture(lutTexture, vec2(x1, y)).rgb;
	vec3 lutColor2 = texture(lutTexture, vec2(x2, y)).rgb;

	float t = (b_exact - b_floor);
	vec3 lutColor = mix(lutColor1, lutColor2, t);

	shader_fragColor = vec4(lutColor, color.a);

	//shader_fragColor = color;
}