vec4 vertexIndexToParticleLocalPosAndUv(int local_index, float particle_size)
{
	vec2 position;
	vec2 uv;
	
	if (local_index == 0)
	{
		position = vec2(-1.0, -1.0);
		uv = vec2(0, 0);
	}
	else if (local_index == 1)
	{
		position = vec2(+1.0, -1.0);
		uv = vec2(1, 0);
	}
	else if (local_index == 2)
	{
		position = vec2(-1.0, +1.0);
		uv = vec2(0, 1);
	}
	else if (local_index == 3)
	{
		position = vec2(+1.0, -1.0);
		uv = vec2(1, 0);
	}
	else if (local_index == 4)
	{
		position = vec2(+1.0, +1.0);
		uv = vec2(1, 1);
	}
	else if (local_index == 5)
	{
		position = vec2(-1.0, +1.0);
		uv = vec2(0, 1);
	}	

	position *= particle_size;

	return vec4(position, uv);
}

vec4 lookupParticlePositionAndVelocity(sampler2D p, int particle_index)
{
	int x = particle_index & 1023;
	int y = particle_index / 1024;
	
	vec2 sizeRcp = vec2(1.0) / textureSize(p, 0);
	vec2 uv = sizeRcp * vec2(x + 0.5, y + 0.5);
	vec4 result = texture(p, uv);
	
	return result;
}
