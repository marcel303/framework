include engine/ShaderPS.txt

shader_in vec2 texcoord;

uniform sampler2D source;
uniform float opacity;
uniform float time;
uniform float cam_azimuth;

uniform float drift;
uniform float zoom;

#define PI 3.14

void main()
{
	float sx = (texcoord.x - 0.5) * zoom;

	sx *= 3.0/2.0;

	float azimuth = atan(sx, 1.0) + 2.5 + cam_azimuth;
	float angle = azimuth;

#if 0
	float syScale = mix(-0.15, 0.15, drift);
	float sy = (texcoord.y * zoom + syScale);
	float elevation = atan(sy, 1.0);
	float radius = abs(1.0 - sin(elevation));
#else
	float syScale = 0.0;
	float sy = (texcoord.y * zoom + syScale);
	float elevation = atan(sy) + 1.0;
	float radius = cos(elevation) + 0.1;
#endif

	float x = cos(angle) * radius;
	float y = sin(angle) * radius;

	vec2 uv = (vec2(x, y) + vec2(1.0)) * 0.5;

	vec4 color = texture(source, uv);

    shader_fragColor = color;
}
