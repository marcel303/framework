include engine/ShaderPS.txt

shader_in vec2 texcoord;
uniform sampler2D colormapL;
uniform sampler2D colormapR;
uniform float mode;

void main()
{
	vec3 colorL = texture(colormapL, texcoord).rgb;
	vec3 colorR = texture(colormapR, texcoord).rgb;
	
	vec3 color;
	
	if (mode == 0)
	{
		float r =
			+ 0.4561000 * colorL.r + 0.5004840 * colorL.g + 0.17638100 * colorL.b
			- 0.0434706 * colorR.r - 0.0879388 * colorR.g - 0.00155529 * colorR.b;
		
		float g =
			-0.0400822 * colorL.r - 0.0378246 * colorL.g
			-0.0157589 * colorL.b + 0.3784760 * colorR.r
			+0.7336400 * colorR.g - 0.0184503 * colorR.b;
		
		float b =
			-0.01521610 * colorL.r - 0.0205971 * colorL.g
			-0.00546856 * colorL.b - 0.0721527 * colorR.r
			-0.11296100 * colorR.g + 1.2264000 * colorR.b;
		
		color = clamp(vec3(r, g, b), vec3(0.0), vec3(1.0));
	}
	else if (mode == 1)
	{
		color = colorL;
	}
	else
	{
		color = colorR;
	}

    shader_fragColor = vec4(color, 1.0);
}
