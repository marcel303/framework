include engine/ShaderPS.txt

uniform mat4x4 projectionToView;

uniform vec3 lightDir_view;
uniform vec3 lightColor1;
uniform vec3 lightColor2;

uniform sampler2D depthTexture;
uniform sampler2D normalTexture;

shader_in vec2 texcoord;

void main()
{
	float camera_view_depth = texture(depthTexture, texcoord).x;

	if (camera_view_depth == 1.0)
	{
		// scene background
		shader_fragColor = vec4(0.0);
		return;
	}

	vec3 normal_view = texture(normalTexture, texcoord).xyz;

	float value = dot(lightDir_view, normal_view);
	float value1 = max(0.0, -value);
	float value2 = max(0.0, value);

	vec3 lightColor =
		lightColor1 * value1 +
		lightColor2 * value2;

	shader_fragColor = vec4(lightColor, 1.0);
}
