include engine/ShaderPS.txt

uniform sampler2D u_texture;

uniform float u_hasTexture;
uniform vec3 u_fogColor;
uniform float u_fogDistance;
uniform vec3 u_lightDir;

shader_in vec2 v_texcoord;
shader_in float v_distance;
shader_in vec3 v_normal;
shader_in float v_opacity;

void main()
{
	vec4 baseColor = 
		u_hasTexture == 0.0
		? vec4(1.0)
		: texture(u_texture, v_texcoord).rgba;

	vec3 albedo = baseColor.rgb;

	float lightIncidence = max(0.0, dot(u_lightDir, v_normal));

	vec3 color1 = vec3(1.0);
	vec3 color2 = vec3(mix(vec3(0, 0, 1), vec3(1.0), 0.5));

	albedo *= mix(color2, color1, lightIncidence);

	vec3 color = mix(albedo, u_fogColor, clamp(v_distance / u_fogDistance, 0.0, 1.0));

	float opacity = baseColor.a * v_opacity;

	shader_fragColor = vec4(color, opacity);
}

